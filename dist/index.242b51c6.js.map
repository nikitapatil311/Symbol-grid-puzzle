{"mappings":"AAAA,SAAS;IACP,MAAM,iBAAiB,SAAS;AAClC;AAGA,IAAI,OAAa;AACjB,MAAM,QAAQ,SAAS,cAAc;AACrC,MAAM,SAAS,SAAS,cAAc;AACtC,MAAM,aAAa,SAAS,cAAc;AAE1C,SAAS;IACP;IACA;AACF;AAEA,SAAS,QAAQ,CAAQ;IACvB,MAAM,MAAM,EAAE;IACd,IAAI,CAAC,OAAO,IAAI,gBAAgB,IAAI;IACpC,IAAI,cAAc;IAClB,MAAM,SAAS;IACf,IAAI,CAAC,QAAQ;SACR;AACP;AAEA,SAAS;IACP,MAAM,oBAAoB,SAAS;IACnC,OAAO,iBAAiB,SAAS;IACjC,WAAW,cAAc,CAAC,UAAU,EAAE,KAAK,CAAC;IAC5C,WAAW,MAAM,UAAU;IAC3B,OAAO,MAAM,aAAa;AAC5B;AAEA,SAAS;IACP,OAAO;IACP;IACA,OAAO,MAAM,aAAa;IAC1B,WAAW,MAAM,UAAU;IAC3B,MAAM,iBAAiB,SAAS;AAClC;AAEA,SAAS;IACP,MAAM,QAAQ,SAAS,iBAAiB;IACxC,MAAM,QAAQ,CAAC;QACb,IAAI,cAAc;IACpB;AACF;AAEA,SAAS;IACP,MAAM,QAAQ,SAAS,iBAAiB;IACxC,MAAM,sBAAsB;QAC1B;YAAC;YAAG;YAAG;SAAE;QACT;YAAC;YAAG;YAAG;SAAE;QACT;YAAC;YAAG;YAAG;SAAE;QACT;YAAC;YAAG;YAAG;SAAE;QACT;YAAC;YAAG;YAAG;SAAE;QACT;YAAC;YAAG;YAAG;SAAE;QACT;YAAC;YAAG;YAAG;SAAE;QACT;YAAC;YAAG;YAAG;SAAE;KACV;IAED,KAAK,MAAM,SAAS,oBAAqB;QACvC,MAAM,CAAC,GAAG,GAAG,EAAE,GAAG;QAClB,IACE,KAAK,CAAC,EAAE,CAAC,eACT,KAAK,CAAC,EAAE,CAAC,gBAAgB,KAAK,CAAC,EAAE,CAAC,eAClC,KAAK,CAAC,EAAE,CAAC,gBAAgB,KAAK,CAAC,EAAE,CAAC,aAElC,OAAO;IAEX;IAEA,OAAO;AACT;AAEA,SAAS;IACP,OAAO,SAAS,MAAM,MAAM;AAC9B;AAEA,SAAS;IACP,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IACrB,QAAQ;AAEZ;AAEA,SAAS,QAAQ,CAAS;IACxB,MAAM,MAAM,SAAS,cAAc;IACnC,IAAI,YAAY;IAChB,IAAI,cAAc;IAClB,MAAM,OAAO;AACf;AAEA","sources":["index.ts"],"sourcesContent":["function listenBoard() {\n  board.addEventListener(\"click\", runGame);\n}\n\ntype Turn = \"X\" | \"O\" | \" \";\nlet turn: Turn = \"X\";\nconst board = document.querySelector(\".game-container\") as HTMLElement;\nconst button = document.querySelector(\".button\") as HTMLButtonElement;\nconst winMessage = document.querySelector(\".winner\") as HTMLElement;\n\nfunction main() {\n  createBoard();\n  listenBoard();\n}\n\nfunction runGame(e: Event) {\n  const box = e.target as HTMLElement;\n  if (!box || box.textContent !== \"\") return;\n  box.textContent = turn;\n  const winner = checkWinner();\n  if (!winner) switchPlayer();\n  else endGame();\n}\n\nfunction endGame() {\n  board.removeEventListener(\"click\", runGame);\n  button.addEventListener(\"click\", resetGame);\n  winMessage.textContent = `Winner is ${turn}`;\n  winMessage.style.display = \"block\";\n  button.style.visibility = \"visible\";\n}\n\nfunction resetGame() {\n  turn = \"X\";\n  resetBoxes();\n  button.style.visibility = \"hidden\";\n  winMessage.style.display = \"none\";\n  board.addEventListener(\"click\", runGame);\n}\n\nfunction resetBoxes() {\n  const boxes = document.querySelectorAll(\".box\");\n  boxes.forEach((box) => {\n    box.textContent = \"\";\n  });\n}\n\nfunction checkWinner() {\n  const boxes = document.querySelectorAll(\".box\");\n  const winningCombinations = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8], // Rows\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8], // Columns\n    [0, 4, 8],\n    [2, 4, 6], // Diagonals\n  ];\n\n  for (const combo of winningCombinations) {\n    const [a, b, c] = combo;\n    if (\n      boxes[a].textContent &&\n      boxes[a].textContent === boxes[b].textContent &&\n      boxes[b].textContent === boxes[c].textContent\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction switchPlayer() {\n  turn = turn === \"X\" ? \"O\" : \"X\";\n}\n\nfunction createBoard() {\n  for (let i = 0; i < 9; i++) {\n    makeBox(i);\n  }\n}\n\nfunction makeBox(i: number) {\n  const box = document.createElement(\"div\");\n  box.className = \"box\";\n  box.textContent = \"\";\n  board.append(box);\n}\n\nmain();\n"],"names":[],"version":3,"file":"index.242b51c6.js.map","sourceRoot":"/__parcel_source_root/"}